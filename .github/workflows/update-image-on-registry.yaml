name: Build and Push to Docker Registry

on:
  push:
    branches:
      - main
env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.event.repository.name }}
jobs:
  build_project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build
      - name: Test with the dotnet CLI
        run: dotnet test
  push_to_registry:
    needs: build_project
    runs-on: ubuntu-latest
    outputs:
      docker_image_tagged: ${{ steps.vars.outputs.docker_image_tagged }}
      sha_short: ${{ steps.vars.outputs.sha_short }}

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set outputs
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "docker_image_tagged=ismael3s/go-cep:$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{ steps.vars.outputs.sha_short }}
          context: .
          file: ./src/Presentation.API/Dockerfile
